[{"C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\index.js":"1","C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\App.js":"2","C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\reportWebVitals.js":"3","C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\components\\Main.js":"4","C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\tools\\connection.js":"5","C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\components\\Home.js":"6","C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\components\\Login.js":"7","C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\std\\SocketCommunication.js":"8","C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\components\\Game.js":"9","C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\components\\Question.js":"10"},{"size":448,"mtime":1612549888231,"results":"11","hashOfConfig":"12"},{"size":185,"mtime":1613143410651,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":5033,"mtime":1614954408731,"results":"15","hashOfConfig":"12"},{"size":2416,"mtime":1613656644098,"results":"16","hashOfConfig":"12"},{"size":3033,"mtime":1614960702985,"results":"17","hashOfConfig":"12"},{"size":1368,"mtime":1614782729311,"results":"18","hashOfConfig":"12"},{"size":1048,"mtime":1613148084317,"results":"19","hashOfConfig":"12"},{"size":14534,"mtime":1615037691762,"results":"20","hashOfConfig":"12"},{"size":6235,"mtime":1615033021509,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"uen85c",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\index.js",[],["48","49"],"C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\App.js",["50"],"import './App.css';\nimport Main from './components/Main';\nimport React, { Component } from 'react';\n\nconst App = () => {\n\n    return (\n      <Main></Main>\n    );\n}\n\nexport default App;\n","C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\reportWebVitals.js",[],"C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\components\\Main.js",["51","52","53","54","55","56","57","58","59","60","61","62","63","64"],"import useWebSocket from 'react-use-websocket';\r\nimport React, { Component, useState, useEffect, useRef, createRef } from 'react';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    withRouter,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport { addToken, getSessionId, getToken, ping, setSessionId } from '../tools/connection';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport { SocketCommunication } from \"../std/SocketCommunication\";\r\nimport Game from './Game';\r\nimport Question from './Question';\r\n\r\n\r\n//const client = new W3CWebSocket('ws://127.0.0.1:3001');\r\n/**\r\n * Hauptsächlich für das Routen zuständig\r\n */\r\nconst Main = () => {\r\n    const NOPROXYPORT = 5110;\r\n    const PROXYPORT = 3002;\r\n    const socketUrl = 'ws://'+window.location.hostname+\":\"+NOPROXYPORT;\r\n\r\n    const refHome = createRef();\r\n    const refLogin = createRef();\r\n    const refGame = createRef();\r\n    const refQuestion = createRef();\r\n\r\n    const {\r\n        sendMessage,\r\n        sendJsonMessage,\r\n        lastMessage,\r\n        lastJsonMessage,\r\n        readyState,\r\n        getWebSocket\r\n    } = useWebSocket(socketUrl, {\r\n        onOpen: e => {\r\n            console.log('WebSocket Client Connected');\r\n        },\r\n        onError: e => {\r\n            console.log('can not connect');\r\n        },\r\n        share: true,\r\n        onMessage: e => {\r\n            let msg = new SocketCommunication();\r\n            msg.set(e.data);\r\n            console.log(msg.data);\r\n            if(msg.data===\"403\") {\r\n                if(refHome?.current!==undefined)\r\n                    refHome.current.goLogin();\r\n                else if(refGame?.current!==undefined)\r\n                    refGame.current.goLogin();\r\n            } else {\r\n                switch (msg.type) {\r\n                    case 'sessionId':\r\n                        setSessionId(msg.id);\r\n                        //console.log(getSessionId());\r\n                        break;\r\n                    case 'login':\r\n                        addToken(msg.token);\r\n                        refLogin?.current.goHome();\r\n                        break;\r\n                    case 'creategame':\r\n                        console.log(\"reseaved new game\");\r\n                        refHome.current.goGame(msg.data._id);\r\n                        break;\r\n                    case 'joingame':\r\n                    case 'updategame':\r\n                        console.log(\"getting game\");\r\n                        refGame?.current.loadGame(msg.data);\r\n                        break;\r\n                    case 'updateplayerlist':\r\n                        console.log('new player joined game');\r\n                        if(refGame?.current!==null)\r\n                            refGame.current.updatePlayerList(msg.data);\r\n                        break;\r\n                    case 'getquestions':\r\n                        refGame?.current.getQuestions(msg.data);\r\n                        break;\r\n                    case 'getquestionslist':\r\n                        if(refQuestion?.current!==null)\r\n                            refQuestion.current.getQuestions(msg.data);\r\n                        break;\r\n                    case 'updatequestion':\r\n                    case 'deletequestion':\r\n                        if(refQuestion?.current!==null)\r\n                            refQuestion.current.refreshQuestions();\r\n                        break;\r\n                    case 'getopengames':\r\n                        refHome?.current.setOpenGames(msg.data);\r\n                        break;\r\n                    default:\r\n                        console.log(msg);\r\n                        break;\r\n                }\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    const send = (type, data) => {\r\n        let s = new SocketCommunication(type, getSessionId(), getToken(), data).getMsg();\r\n        sendMessage(s);\r\n    }\r\n\r\n    useEffect(() => {\r\n        //TODO: sessionID wird nach reload neu generiert, aber nicht richtig gesetzt\r\n        if(!getToken()) {\r\n            if(!!refHome.current)\r\n                refHome.current.goLogin();\r\n            else if(!!refGame.current)\r\n                refGame.current.goLogin();\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <Route exact path=\"/\"><Home send={send} ref={refHome}></Home></Route>\r\n                        <Route path=\"/home\"><Home send={send} ref={refHome}></Home></Route>\r\n                        <Route path=\"/login\"><Login send={send} ref={refLogin}></Login></Route>\r\n                        <Route exact path=\"/game\"><Game send={send} ref={refGame}></Game></Route>\r\n                        <Route path=\"/game/:id\"><Game send={send} ref={refGame}></Game></Route>\r\n                        <Route path=\"/question\"><Question send={send} ref={refQuestion}></Question></Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main\r\n","C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\tools\\connection.js",[],"C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\components\\Home.js",["65","66","67","68","69"],"import React, { Component, forwardRef, useEffect, useState, useImperativeHandle } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport { getUser, removeToken } from '../tools/connection';\r\n\r\nimport logo from '../assets/temp_logo.png';\r\n\r\n\r\nconst Home = forwardRef((props, ref) => {\r\n    const history = useHistory();\r\n\r\n    const [viewGameList, setViewGameList] = useState(false);\r\n    const [gameList, setGameList] = useState([]);\r\n\r\n    const createGame = () => {\r\n        props.send('creategame', null);\r\n    }\r\n\r\n    const logout = () => {\r\n        removeToken();\r\n        history.push('/login');\r\n    }\r\n\r\n    const toggleGameListView = () => {\r\n        if(!viewGameList) getGameList();\r\n        setViewGameList(!viewGameList);\r\n    }\r\n\r\n    const getGameList = () => {\r\n        props.send('getopengames', null);\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        goGame(id) {\r\n            history.push('/game/' + id);\r\n        },\r\n        goLogin() {\r\n            history.push('/login');\r\n        },\r\n        setOpenGames(games) {\r\n            setGameList(games);\r\n        }\r\n    }));\r\n\r\n    // useEffect(() => {\r\n    //     setTimeout(() => props.send('getopengames', null), 1000);\r\n    // }, [])\r\n\r\n    const renderGameList = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"formlist\">\r\n                    <button onClick={toggleGameListView}>Menu</button>\r\n                </div>\r\n                {gameList.length>0?\r\n                    <ul className=\"gamelist\"> \r\n                        {gameList.map(g => \r\n                            <li>\r\n                                <Link to={g.state!=='lobby'?'':'/game/'+g._id}>\r\n                                    <div>{'hosted by '+g.mod.name}</div>\r\n                                    <div>{g.connected+' online'}</div>\r\n                                    <div>{g.state}</div>\r\n                                </Link>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                :<div>no open games to join</div>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderMenu = () => {\r\n        return (\r\n            <div className=\"formlist\">\r\n                <button onClick={createGame}>New Game</button>\r\n                <button onClick={toggleGameListView}>Join Game</button>\r\n                <Link to=\"/question\">\r\n                    <button>Edit Questions</button>\r\n                </Link>\r\n                <button onClick={logout}>Logout</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"navbar\">\r\n                <p>{\"Logged in as \" + getUser().name}</p>\r\n                <img src={logo} alt=\"logo\" className=\"logo\"></img>\r\n            </div>\r\n            <div className=\"content\">\r\n                {viewGameList?renderGameList():renderMenu()}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Home\r\n","C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\components\\Login.js",["70","71","72","73","74"],"import React, { Component, forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { checkAccess, login } from '../tools/connection';\r\n\r\nconst Login = forwardRef ((props, ref) => {\r\n    const history = useHistory();\r\n    var [name, setName] = useState('');\r\n    var [pwd, setPwd] = useState('');\r\n\r\n    console.log(ref);\r\n\r\n    const update = e => {\r\n        if(e.target.id==='name')\r\n            setName(e.target.value);\r\n        else if (e.target.id==='pwd')\r\n            setPwd(e.target.value);\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        goHome () {\r\n            history.push('/home');\r\n        }\r\n    }));\r\n\r\n    const commit = () => {\r\n        props.send('login', {name: name, pwd: pwd});\r\n        //login(send, name, pwd);\r\n    }\r\n\r\n    const check = () => {\r\n        props.send('sec',\"hi\");\r\n        //checkAccess(client.current);\r\n    }\r\n\r\n    return (\r\n        <div className=\"formlist\">\r\n            <h1>Login</h1>\r\n            <input placeholder=\"Name\" value={name} id=\"name\" onChange={update}></input>\r\n            <input placeholder=\"Password\" value={pwd} id=\"pwd\" onChange={update} type=\"password\"></input>\r\n            <button onClick={commit}>Send</button>\r\n            <button onClick={check}>Check</button>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Login\r\n","C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\std\\SocketCommunication.js",["75"],"export class SocketCommunication {\r\n\r\n    constructor(type, id, token, data) {\r\n        this.type = type;\r\n        this.data = data;\r\n        this.id = id;\r\n        this.token = token;\r\n    }\r\n\r\n    /**\r\n     * @returns Object as sendable string\r\n     */\r\n    getMsg() {\r\n        return JSON.stringify({type: this.type, id: this.id, token: this.token, data: this.data});\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} s string that has been received via websocket\r\n     */\r\n    set(s) {\r\n        try {\r\n            let e = JSON.parse(s);\r\n            if(e.type!==undefined) {\r\n                this.type = e.type;\r\n                this.data = e.data;\r\n                this.id = e.id;\r\n                this.token = e.token;\r\n            } else {\r\n                throw \"undefined object\";\r\n            }\r\n        } catch(ex) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\nexport default SocketCommunication","C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\components\\Game.js",["76","77","78","79","80","81","82","83"],"C:\\Users\\matth\\Documents\\dev_projects_nosync\\quiz-app\\quiz-app\\src\\components\\Question.js",["84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":3,"column":17,"nodeType":"91","messageId":"92","endLine":3,"endColumn":26},{"ruleId":"89","severity":1,"message":"90","line":2,"column":17,"nodeType":"91","messageId":"92","endLine":2,"endColumn":26},{"ruleId":"89","severity":1,"message":"93","line":2,"column":28,"nodeType":"91","messageId":"92","endLine":2,"endColumn":36},{"ruleId":"89","severity":1,"message":"94","line":2,"column":49,"nodeType":"91","messageId":"92","endLine":2,"endColumn":55},{"ruleId":"89","severity":1,"message":"95","line":8,"column":5,"nodeType":"91","messageId":"92","endLine":8,"endColumn":13},{"ruleId":"89","severity":1,"message":"96","line":9,"column":5,"nodeType":"91","messageId":"92","endLine":9,"endColumn":15},{"ruleId":"89","severity":1,"message":"97","line":10,"column":5,"nodeType":"91","messageId":"92","endLine":10,"endColumn":15},{"ruleId":"89","severity":1,"message":"98","line":12,"column":44,"nodeType":"91","messageId":"92","endLine":12,"endColumn":48},{"ruleId":"89","severity":1,"message":"99","line":26,"column":11,"nodeType":"91","messageId":"92","endLine":26,"endColumn":20},{"ruleId":"89","severity":1,"message":"100","line":36,"column":9,"nodeType":"91","messageId":"92","endLine":36,"endColumn":24},{"ruleId":"89","severity":1,"message":"101","line":37,"column":9,"nodeType":"91","messageId":"92","endLine":37,"endColumn":20},{"ruleId":"89","severity":1,"message":"102","line":38,"column":9,"nodeType":"91","messageId":"92","endLine":38,"endColumn":24},{"ruleId":"89","severity":1,"message":"103","line":39,"column":9,"nodeType":"91","messageId":"92","endLine":39,"endColumn":19},{"ruleId":"89","severity":1,"message":"104","line":40,"column":9,"nodeType":"91","messageId":"92","endLine":40,"endColumn":21},{"ruleId":"105","severity":1,"message":"106","line":119,"column":8,"nodeType":"107","endLine":119,"endColumn":10,"suggestions":"108"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"109","line":1,"column":40,"nodeType":"91","messageId":"92","endLine":1,"endColumn":49},{"ruleId":"89","severity":1,"message":"110","line":3,"column":22,"nodeType":"91","messageId":"92","endLine":3,"endColumn":28},{"ruleId":"89","severity":1,"message":"111","line":4,"column":5,"nodeType":"91","messageId":"92","endLine":4,"endColumn":11},{"ruleId":"89","severity":1,"message":"112","line":5,"column":5,"nodeType":"91","messageId":"92","endLine":5,"endColumn":10},{"ruleId":"89","severity":1,"message":"90","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"109","line":1,"column":40,"nodeType":"91","messageId":"92","endLine":1,"endColumn":49},{"ruleId":"89","severity":1,"message":"94","line":1,"column":72,"nodeType":"91","messageId":"92","endLine":1,"endColumn":78},{"ruleId":"89","severity":1,"message":"113","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":21},{"ruleId":"89","severity":1,"message":"114","line":3,"column":23,"nodeType":"91","messageId":"92","endLine":3,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":30,"column":17,"nodeType":"117","messageId":"118","endLine":30,"endColumn":42},{"ruleId":"89","severity":1,"message":"119","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":19},{"ruleId":"105","severity":1,"message":"120","line":101,"column":8,"nodeType":"107","endLine":101,"endColumn":10,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":219,"column":23,"nodeType":"124","messageId":"125","endLine":219,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":249,"column":29,"nodeType":"128","endLine":249,"endColumn":63},{"ruleId":"129","severity":1,"message":"130","line":267,"column":29,"nodeType":"128","endLine":273,"endColumn":49},{"ruleId":"126","severity":1,"message":"127","line":337,"column":34,"nodeType":"128","endLine":337,"endColumn":49},{"ruleId":"126","severity":1,"message":"127","line":345,"column":86,"nodeType":"128","endLine":345,"endColumn":104},{"ruleId":"126","severity":1,"message":"127","line":346,"column":86,"nodeType":"128","endLine":346,"endColumn":102},{"ruleId":"105","severity":1,"message":"131","line":21,"column":8,"nodeType":"107","endLine":21,"endColumn":10,"suggestions":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.","'Redirect' is defined but never used.","'withRouter' is defined but never used.","'useHistory' is defined but never used.","'ping' is defined but never used.","'PROXYPORT' is assigned a value but never used.","'sendJsonMessage' is assigned a value but never used.","'lastMessage' is assigned a value but never used.","'lastJsonMessage' is assigned a value but never used.","'readyState' is assigned a value but never used.","'getWebSocket' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'refGame' and 'refHome'. Either include them or remove the dependency array.","ArrayExpression",["135"],"'useEffect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'checkAccess' is defined but never used.","'login' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'queryString' is defined but never used.","React Hook useEffect has a missing dependency: 'getGame'. Either include it or remove the dependency array.",["136"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has a missing dependency: 'getQuestionList'. Either include it or remove the dependency array.",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [refGame, refHome]",{"range":"144","text":"145"},"Update the dependencies array to be: [getGame]",{"range":"146","text":"147"},"Update the dependencies array to be: [getQuestionList]",{"range":"148","text":"149"},[4198,4200],"[refGame, refHome]",[2967,2969],"[getGame]",[838,840],"[getQuestionList]"]